#!/usr/bin/python
import os
import optparse
import time
import re

YUI_COMPRESSOR = 'yuicompressor-2.4.7.jar'

SCRIPTS_MAIN = ['static/javascript/jquery_js/jquery.min.js',
                'static/javascript/jquery_js/jquery-ui-1.8.13.custom.min.js',
                'static/javascript/jquery_js/jquery.ui.touch-punch.min.js',
                'static/javascript/jquery_js/jquery.tablesorter.min.js',
                'static/javascript/bootstrap_js/bootstrap.js',
                'static/javascript/bootstrap_js/bootstrap-typeahead.js',
                'static/javascript/jquery_js/jquery.fancybox.pack.js',
                'static/jwplayer/jwplayer.js',
                'static/javascript/jquery_js/jquery.fitvids.js',
                'static/javascript/tba_js/tablesorter.js',
                'static/javascript/tba_js/tba.js',
                ]

SCRIPTS_DIR = 'static/javascript/'
SCRIPTS_MAIN_FILE = 'tba_combined-{}.main.min.js'
SCRIPTS_MAIN_OUT = SCRIPTS_DIR + SCRIPTS_MAIN_FILE
SCRIPTS_GAMEDAY = SCRIPTS_MAIN + ['static/javascript/tba_js/gameday.js']
SCRIPTS_GAMEDAY_FILE = 'tba_combined-{}.gameday.min.js'
SCRIPTS_GAMEDAY_OUT = SCRIPTS_DIR + SCRIPTS_GAMEDAY_FILE

STYLESHEETS_MAIN = ['static/css/precompiled_css/jquery-ui-1.8.13.custom.css',
                    'static/css/precompiled_css/jquery.fancybox.css',
                    'static/css/precompiled_css/tablesorter.css',
                    'static/css/less_css/tba_style.main.css',
                    ]
STYLESHEETS_GAMEDAY = ['static/css/precompiled_css/jquery-ui-1.8.13.custom.css',
                       'static/css/precompiled_css/jquery.fancybox.css',
                       'static/css/precompiled_css/tablesorter.css',
                       'static/css/less_css/tba_style.gameday.css',
                       ]
STYLESHEETS_DIR = 'static/css/'
STYLESHEETS_MAIN_FILE = 'tba_style-{}.main.min.css'
STYLESHEETS_MAIN_OUT = STYLESHEETS_DIR + STYLESHEETS_MAIN_FILE
STYLESHEETS_GAMEDAY_FILE = 'tba_style-{}.gameday.min.css'
STYLESHEETS_GAMEDAY_OUT = STYLESHEETS_DIR + STYLESHEETS_GAMEDAY_FILE

TBA_CONFIG = 'tba_config.py'


def compress(in_files, out_file, in_type='js', verbose=False,
             temp_file='.temp'):
    temp = open(temp_file, 'w')
    for f in in_files:
        fh = open(f)
        data = fh.read() + '\n'
        fh.close()

        temp.write(data)

        print ' + %s' % f
    temp.close()

    options = ['-o "%s"' % out_file,
               '--type %s' % in_type]

    if verbose:
        options.append('-v')

    os.system('java -jar "%s" %s "%s"' % (YUI_COMPRESSOR,
                                          ' '.join(options),
                                          temp_file))

    org_size = os.path.getsize(temp_file)
    new_size = os.path.getsize(out_file)

    print '=> %s' % out_file
    print 'Original: %.2f kB' % (org_size / 1024.0)
    print 'Compressed: %.2f kB' % (new_size / 1024.0)
    print 'Reduction: %.1f%%' % (float(org_size - new_size) / org_size * 100)
    print ''


def main(kind=None):
    epoch = int(time.time())
    
    if kind == 'js' or kind == None:
        deleteFolderContents('static/javascript')
      
        print 'Compressing Main JavaScript...'
        compress(SCRIPTS_MAIN, SCRIPTS_MAIN_OUT.format(epoch), 'js')
    
        print 'Compressing GameDay JavaScript...'
        compress(SCRIPTS_GAMEDAY, SCRIPTS_GAMEDAY_OUT.format(epoch), 'js')
        
        print 'Writing tba_config.py'
        fr = open(TBA_CONFIG, 'r').read()
        output = re.sub(r'MAIN_JS.*# AUTOGENERATED', r"MAIN_JS = '{}' # AUTOGENERATED".format(SCRIPTS_MAIN_FILE.format(epoch)), str(fr))
        output = re.sub(r'GAMEDAY_JS.*# AUTOGENERATED', r"GAMEDAY_JS = '{}' # AUTOGENERATED".format(SCRIPTS_GAMEDAY_FILE.format(epoch)), output)
        fw = open(TBA_CONFIG, 'w')
        fw.write(output)

    if kind == 'css' or kind == None:
        deleteFolderContents('static/css')
      
        print 'Compressing Main CSS...'
        compress(STYLESHEETS_MAIN, STYLESHEETS_MAIN_OUT.format(epoch), 'css')
        
        print 'Compressing GameDay CSS...'
        compress(STYLESHEETS_GAMEDAY, STYLESHEETS_GAMEDAY_OUT.format(epoch), 'css')
        
        print 'Writing tba_config.py'
        fr = open(TBA_CONFIG, 'r').read()
        output = re.sub(r'MAIN_CSS.*# AUTOGENERATED', r"MAIN_CSS = '{}' # AUTOGENERATED".format(STYLESHEETS_MAIN_FILE.format(epoch)), str(fr))
        output = re.sub(r'GAMEDAY_CSS.*# AUTOGENERATED', r"GAMEDAY_CSS = '{}' # AUTOGENERATED".format(STYLESHEETS_GAMEDAY_FILE.format(epoch)), output)
        fw = open(TBA_CONFIG, 'w')
        fw.write(output)
        
def deleteFolderContents(folder):
    """
    Removes all files in a folder. Does not recurse through folders.
    """
    for the_file in os.listdir(folder):
        file_path = os.path.join(folder, the_file)
        try:
            if os.path.isfile(file_path):
                os.unlink(file_path)
        except Exception, e:
            print e

if __name__ == '__main__':
    parser = optparse.OptionParser()
    options, args = parser.parse_args()
    if len(args) < 1:
        main()
    else:
        main(args[0])
