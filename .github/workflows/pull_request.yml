name: On pull request

on:
  pull_request:
    branches:
      - py3

jobs:
  py3-type:
    name: "[py3] Type Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.8
      - name: Cache pip
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r src/requirements.txt
      - name: Run Type Check
        run: ./ops/typecheck_py3.sh
  py3-lint:
    name: "[py3] Format & Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.8
      - name: Cache pip
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r src/requirements.txt
      - name: Run Format & Lint
        run: ./ops/lint_py3.sh
  py3-test:
    name: "[py3] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.8
      - name: Cache pip
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r src/requirements.txt
      - name: Run Tests
        run: ./ops/test_py3.sh
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
  node-lint:
    name: "[node] Format & Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2.1.7
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm ci
      - name: Run Format & Lint
        run: ./ops/lint_node.sh
  node-test:
    name: "[node] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2.1.7
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: ./ops/test_node.sh
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2.1.0
        with:
          directory: ./.node_coverage/
  bash-lint:
    name: "[bash] Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.8
      - name: Cache pip
        uses: actions/cache@v2.1.7
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Shellcheck
        run: |
          python -m pip install --upgrade pip
          pip install shellcheck-py
      - name: Install shfmt
        run: |
          mkdir -p $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          wget "https://github.com/mvdan/sh/releases/download/v3.2.2/shfmt_v3.2.2_linux_amd64" -O $HOME/.local/bin/shfmt
          chmod +x $HOME/.local/bin/shfmt
      - name: Run Lint
        run: ./ops/lint_bash.sh

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.8
      - name: Set up Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2.1.7
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Node Dependencies
        run: npm ci
      - name: Run Build
        run: ./ops/build/run_buildweb.sh --env

  ops-test:
    name: Ops Fullstack Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2.3.0
        with:
          python-version: 3.8
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Set up Node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "14"
      - name: Cache node modules
        uses: actions/cache@v2.1.7
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Node Dependencies
        run: npm ci
      - name: Install Vagrant
        run: sudo apt-get install vagrant
      - name: Create keys file
        run: cp ./src/backend/web/static/javascript/tba_js/tba_keys_template.js ./src/backend/web/static/javascript/tba_js/tba_keys.js
      - name: Start Container
        run: ENV='CI' vagrant up
      - name: Test Vagrant Startup
        run: ./ops/test_vagrant_startup.py
      - name: Test Ops Fullstack
        run: ./ops/test_ops.sh
      - name: Comment Webpage Screenshot
        uses: saadmk11/comment-webpage-screenshot@v0.5
        with:
          capture_urls: "http://172.17.0.1:8080, http://172.17.0.1:8080/gameday"

  automerge:
    needs: [py3-type, py3-lint, py3-test, node-lint, node-test, bash-lint, build-web, ops-test]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3.0.2
        with:
          github-token: ${{ secrets.PROTECTED_BRANCH_PUSH }}
