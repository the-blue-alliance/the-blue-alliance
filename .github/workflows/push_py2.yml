name: On push (py2)

on:
  push:
    branches:
      - master

concurrency: deploy-${{ github.ref }}

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "10.x"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r travis_requirements.txt
          paver install_libs
      - name: Install Node Dependencies
        run: |
          npm install
          npm install -g gulp-cli uglify-es uglifycss less request tslib
      - name: Install GAE
        run: |
          wget https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.66.zip -nv
          unzip -q google_appengine_1.9.66.zip -d $HOME
          rm google_appengine_1.9.66.zip
          echo "PYTHONPATH=${PYTHONPATH}:${HOME}/google_appengine" >> $GITHUB_ENV
          echo "PATH=${PATH}:${HOME}/google_appengine" >> $GITHUB_ENV
      - name: Lint Python
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: paver lint
      - name: Lint JS
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: npm run lint -s
      - name: Validate Swagger
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: paver validate_swagger
      - name: Validate Endpoints Configuration
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: paver make_endpoints_config
  py2-test:
    name: "[py2] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r travis_requirements.txt
          paver install_libs
      - name: Install GAE
        run: |
          wget https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.66.zip -nv
          unzip -q google_appengine_1.9.66.zip -d $HOME
          rm google_appengine_1.9.66.zip
          echo "PYTHONPATH=${PYTHONPATH}:${HOME}/google_appengine" >> $GITHUB_ENV
          echo "PATH=${PATH}:${HOME}/google_appengine" >> $GITHUB_ENV
      - name: Run Tests
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: paver test
  node-test:
    name: "[node] Test"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "10.x"
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        if: contains(github.event.commits[0].message, '[clowntown]') == false
        run: npm test
  make-deploy:
    name: "Make & Deploy"
    runs-on: ubuntu-latest
    needs: [lint, py2-test, node-test]
    if: contains(github.event.commits[0].message, '[nodeploy]') == false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: 2.7
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: "10.x"
      - name: Setup Google Cloud Platform
        uses: google-github-actions/setup-gcloud@master
        with:
          version: "321.0.0"
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r travis_requirements.txt
          paver install_libs
      - name: Install GAE
        run: |
          wget https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.66.zip -nv
          unzip -q google_appengine_1.9.66.zip -d $HOME
          rm google_appengine_1.9.66.zip
          echo "PYTHONPATH=${PYTHONPATH}:${HOME}/google_appengine" >> $GITHUB_ENV
          echo "PATH=${PATH}:${HOME}/google_appengine" >> $GITHUB_ENV
      - name: Install Node Dependencies
        run: |
          npm install
          npm install -g gulp-cli uglify-es uglifycss less request tslib
      - name: Create tba_keys.js file
        run: ./ops/create_tba_keys_js_file.sh
      - name: Make
        run: paver make
      - name: Deploy app.yaml
        run: gcloud app deploy app.yaml --version prod-2 --quiet
      - name: Deploy index.yaml
        run: gcloud app deploy index.yaml --version prod-2 --quiet
      - name: Deploy queue.yaml
        run: gcloud app deploy queue.yaml --version prod-2 --quiet
      - name: Overwrite YAMLs with skeleton deploy
        run: |
          mv -f ./ops/standalone/cron-skeleton.yaml ./cron.yaml
          mv -f ./ops/standalone/dispatch-empty.yaml ./dispatch.yaml
      - name: Deploy cron.yaml
        run: gcloud app deploy cron.yaml --version prod-2 --quiet
      - name: Deploy dispatch.yaml
        run: gcloud app deploy dispatch.yaml --version prod-2 --quiet
