import json
import unittest2

from datafeeds.parsers.fms_api.fms_api_team_avatar_parser import FMSAPITeamAvatarParser

from google.appengine.ext import ndb
from google.appengine.ext import testbed

from models.district import District
from consts.media_type import MediaType


class TestFMSAPITeamAvatarParser(unittest2.TestCase):
    def setUp(self):
        self.testbed = testbed.Testbed()
        self.testbed.activate()
        self.testbed.init_datastore_v3_stub()
        self.testbed.init_memcache_stub()
        ndb.get_context().clear_cache()  # Prevent data from leaking between tests

    def tearDown(self):
        self.testbed.deactivate()

    def test_parse_team_with_avatar(self):
        with open('test_data/fms_api/2018_avatars_frc1741.json', 'r') as f:
            models, _, more_pages = FMSAPITeamAvatarParser(2018).parse(json.loads(f.read()))

            self.assertFalse(more_pages)
            self.assertEqual(len(models), 1)

            # Ensure we get the proper Media model back
            media = models[0]
            self.assertEqual(media.key, ndb.Key('Media', 'avatar_avatar_2018_frc1741'))
            self.assertEqual(media.foreign_key, 'avatar_2018_frc1741')
            self.assertEqual(media.media_type_enum, MediaType.AVATAR)
            self.assertEqual(media.references, [ndb.Key('Team', 'frc1741')])
            self.assertEqual(media.year, 2018)
            self.assertEqual(media.details_json, '{"base64Image": ""}')

    def test_parse_team_with_no_avatar(self):
        with open('test_data/fms_api/2018_avatars_frc1.json', 'r') as f:
            models, _, more_pages = FMSAPITeamAvatarParser(2018).parse(json.loads(f.read()))

            self.assertFalse(more_pages)
            self.assertEqual(len(models), 0)

    def test_parse_result_with_multiple_teams(self):
        with open('test_data/fms_api/2018_avatars_multiple.json', 'r') as f:
            models, _, more_pages = FMSAPITeamAvatarParser(2018).parse(json.loads(f.read()))

            self.assertFalse(more_pages)
            self.assertEqual(len(models), 1)

            # Ensure we get the proper Media model back
            media_team_1741 = models[0]
            self.assertEqual(media_team_1741.key, ndb.Key('Media', 'avatar_avatar_2018_frc1741'))
            self.assertEqual(media_team_1741.foreign_key, 'avatar_2018_frc1741')
            self.assertEqual(media_team_1741.media_type_enum, MediaType.AVATAR)
            self.assertEqual(media_team_1741.references, [ndb.Key('Team', 'frc1741')])
            self.assertEqual(media_team_1741.year, 2018)
            self.assertEqual(media_team_1741.details_json, '{"base64Image": ""}')
