swagger: '2.0'

info:
  version: "3.0.0 beta"
  title: TBA API v3
  description: The Blue Alliance API v3.

host: www.thebluealliance.com

schemes:
 - https

basePath: /api/v3

produces:
 - application/json

security:
  - apiKeyHeader: []
  - apiKeyParameter: []

parameters:
  page_num:
    name: page_num
    in: path
    description: Page number of results to return, zero-indexed
    required: true
    type: number
    format: integer
  year:
    name: year
    in: path
    description: Competition Year (or Season)
    required: true
    type: number
    format: integer
  team_key:
    name: team_key
    in: path
    description: TBA Team Key, eg `frc254`
    required: true
    type: string
  event_key:
    name: event_key
    in: path
    description: TBA Event Key, eg `2016nytr`
    required: true
    type: string
  match_key:
    name: match_key
    in: path
    description: TBA Match Key, eg `2016nytr_qm1`
    required: true
    type: string
  district_key:
    name: district_key
    in: path
    description: TBA District Key, eg `fim`
    required: true
    type: string
  match_type:
    name: match_type
    in: path
    description: Match Type, eg `qual`, `elim`, or `all`
    required: true
    type: string
    enum:
    - qual
    - elim
    - all

paths:
  /status:
    get:
      description: Returns API status, and TBA status information.
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/API_Status'
  # Team-oriented paths
  /teams/{page_num}:
    get:
      tags:
      - team
      - list
      description: |
        Gets a list of `Team` objects, pagenated in groups of 500.
      parameters:
        - $ref: '#/parameters/page_num'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
  # Simple (non-full) responses need a separate path definition.
  # See also https://github.com/OAI/OpenAPI-Specification/issues/270
  /teams/{page_num}/simple:
    get:
      tags:
      - team
      - list
      description: |
        Gets a list of short form `Team_Simple` objects, pagenated in groups of 500.
      parameters:
        - $ref: '#/parameters/page_num'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team_Simple'
  /teams/{page_num}/keys:
    get:
      tags:
      - team
      - list
      description: |
        Gets a list of Team keys, pagenated in groups of 500.
      parameters:
        - $ref: '#/parameters/page_num'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
  /teams/{year}/{page_num}:
    get:
      tags:
      - team
      - list
      description: |
        Gets a list of `Team` objects that competed in the
        given year, pagenated in groups of 500.
      parameters:
        - $ref: '#/parameters/year'
        - $ref: '#/parameters/page_num'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
  /teams/{year}/{page_num}/simple:
    get:
      tags:
      - team
      - list
      description: |
        Gets a list of short form `Team_Simple` objects that competed in the
        given year, pagenated in groups of 500.
      parameters:
        - $ref: '#/parameters/year'
        - $ref: '#/parameters/page_num'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team_Simple'
  /teams/{year}/{page_num}/keys:
    get:
      tags:
      - team
      - list
      description: |
        Gets a list Team Keys that competed in the
        given year, pagenated in groups of 500.
      parameters:
        - $ref: '#/parameters/year'
        - $ref: '#/parameters/page_num'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Team Key
  /team/{team_key}:
    get:
      tags:
      - team
      description: |
        Gets a `Team` object for the team referenced by the given key.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Team'
  /team/{team_key}/simple:
    get:
      tags:
      - team
      description: |
        Gets a `Team_Simple` object for the team referenced by the given key.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Team_Simple'
  /team/{team_key}/years_participated:
    get:
      tags:
      - team
      description: |
        Gets a list of years in which the team participated in at least one
        competition.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: integer
  /team/{team_key}/districts:
    get:
      tags:
      - team
      - district
      description: |
        Gets a list or year and district pairs to denote each year the team was
        in a district. Will return an empty array if the team was never in a
        district.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: object
              properties:
                year:
                  type: integer
                district_key:
                  type: string
  /team/{team_key}/robots:
    get:
      tags:
      - team
      description: |
        Gets a list of year and robot name pairs for each year that a robot
        name was provided. Will return an empty array if the team has never
        named a robot.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: object
              properties:
                year:
                  type: integer
                robot_name:
                  type: string
  /team/{team_key}/events:
    get:
      tags:
      - team
      - event
      description: |
        Gets a list of all events this team has competed at.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
  /team/{team_key}/events/simple:
    get:
      tags:
      - team
      - event
      description: |
        Gets a short-form list of all events this team has competed at.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event_Simple'
  /team/{team_key}/events/keys:
    get:
      tags:
      - team
      - event
      description: |
        Gets a list of the event keys for all events this team has competed at.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Event Key
  /team/{team_key}/events/{year}:
    get:
      tags:
      - team
      - event
      description: |
        Gets a list of events this team has competed at in the given year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
  /team/{team_key}/events/{year}/simple:
    get:
      tags:
      - team
      - event
      description: |
        Gets a short-form list of events this team has competed at in the given year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event_Simple'
  /team/{team_key}/events/{year}/keys:
    get:
      tags:
      - team
      - event
      description: |
        Gets a list of the event keys for events this team has competed at in the given year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Event Key
  /team/{team_key}/event/{event_key}/matches/{match_type}:
    get:
      tags:
      - team
      - event
      - match
      description: |
        Gets a list of matches for the given team and event of the given match type.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/event_key'
        - $ref: '#/parameters/match_type'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Match'
  /team/{team_key}/event/{event_key}/matches/{match_type}/simple:
    get:
      tags:
      - team
      - event
      - match
      description: |
        Gets a short-form list of matches for the given team and event of the given match type.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/event_key'
        - $ref: '#/parameters/match_type'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Match'
  /team/{team_key}/event/{event_key}/matches/{match_type}/keys:
    get:
      tags:
      - team
      - event
      - match
      description: |
        Gets a list of match keys for matches for the given team and event of the given match type.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/event_key'
        - $ref: '#/parameters/match_type'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Match Key
  /team/{team_key}/event/{event_key}/awards:
    get:
      tags:
      - team
      - event
      description: |
        Gets a list of awards the given team won at the given event.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Award'
  /team/{team_key}/event/{event_key}/status:
    get:
      tags:
      - team
      - event
      description: |
        Gets the competition rank and status of the team at the given event.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Team_Event_Status'
  /team/{team_key}/awards:
    get:
      tags:
      - team
      description: |
        Gets a list of awards the given team has won.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Award'
  /team/{team_key}/awards/{year}:
    get:
      tags:
      - team
      description: |
        Gets a list of awards the given team has won in a given year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Award'
  /team/{team_key}/matches/{year}:
    get:
      tags:
      - team
      - match
      description: |
        Gets a list of matches for the given team and year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Match'
  /team/{team_key}/matches/{year}/simple:
    get:
      tags:
      - team
      - match
      description: |
        Gets a short-form list of matches for the given team and year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Match_Simple'
  /team/{team_key}/matches/{year}/keys:
    get:
      tags:
      - team
      - match
      description: |
        Gets a list of match keys for matches for the given team and year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Match Key
  /team/{team_key}/media/{year}:
    get:
      tags:
      - team
      description: |
        Gets a list of Media (videos / pictures) for the given team and year.
      parameters:
        - $ref: '#/parameters/team_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Media'
  /team/{team_key}/social_media:
    get:
      tags:
      - team
      description: |
        Gets a list of Media (social media) for the given team.
      parameters:
        - $ref: '#/parameters/team_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Media'

  # Event oriented paths
  /events/{year}:
    get:
      tags:
      - event
      - list
      description: |
        Gets a list of events in the given year.
      parameters:
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
  /events/{year}/simple:
    get:
      tags:
      - event
      - list
      description: |
        Gets a short-form list of events in the given year.
      parameters:
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event_Simple'
  /events/{year}/keys:
    get:
      tags:
      - event
      - list
      description: |
        Gets a list of event keys in the given year.
      parameters:
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Event Key
  /event/{event_key}:
    get:
      tags:
      - event
      description: Gets an Event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Event'
  /event/{event_key}/simple:
    get:
      tags:
      - event
      description: Gets a short-form Event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Event_Simple'
  /event/{event_key}/elim_alliances:
    get:
      tags:
      - event
      description: Gets a list of Elimination Alliances for the given Event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Elimination_Alliance'
  /event/{event_key}/stats:
    get:
      tags:
      - event
      description: Gets a list of Stats for the given Event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: string
            description: |
              A year-specific event stat object expressed as a JSON string. See also
              Event_Stats_2016
  /event/{event_key}/rankings:
    get:
      tags:
      - event
      description: Gets a list of team rankings for the Event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Ranking'
  /event/{event_key}/district_points:
    get:
      tags:
      - event
      - district
      description: Gets a list of team rankings for the Event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event_District_Points'
  /event/{event_key}/teams:
    get:
      tags:
      - event
      - team
      - list
      description: |
        Gets a list of `Team` objects that competed in the
        given event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
  /event/{event_key}/teams/simple:
    get:
      tags:
      - event
      - team
      - list
      description: |
        Gets a short-form list of `Team` objects that competed in the
        given event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team_Simple'
  /event/{event_key}/teams/keys:
    get:
      tags:
      - event
      - team
      - list
      description: |
        Gets a list of `Team` keys that competed in the
        given event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Team Key
  /event/{event_key}/matches:
    get:
      tags:
      - event
      - match
      description: |
        Gets a list of matches for the given event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Match'
  /event/{event_key}/matches/simple:
    get:
      tags:
      - event
      - match
      description: |
        Gets a short-form list of matches for the given event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Match_Simple'
  /event/{event_key}/matches/keys:
    get:
      tags:
      - event
      - match
      description: |
        Gets a list of match keys for the given event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Match Key
  /event/{event_key}/awards:
    get:
      tags:
      - event
      description: |
        Gets a list of awards from the given event.
      parameters:
        - $ref: '#/parameters/event_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Award'

  # Match-specific paths
  /match/{match_key}:
    get:
      tags:
      - match
      description: |
        Gets a `Match` object for the given match key.
      parameters:
        - $ref: '#/parameters/match_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Match'
  /match/{match_key}/simple:
    get:
      tags:
      - match
      description: |
        Gets a short-form `Match` object for the given match key.
      parameters:
        - $ref: '#/parameters/match_key'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            $ref: '#/definitions/Match_Simple'

  # District paths
  /districts/{year}:
    get:
      tags:
      - district
      description: |
        Gets a list of districts and their corresponding district key, for the given year.
      parameters:
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: District Name
                key:
                  type: string
                  description: District Key
  /district/{district_key}/{year}/events:
    get:
      tags:
      - district
      - event
      - list
      description: |
        Gets a list of events in the given district in the given year.
      parameters:
        - $ref: '#/parameters/district_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
  /district/{district_key}/{year}/events/simple:
    get:
      tags:
      - district
      - event
      - list
      description: |
        Gets a short-form list of events in the given district in the given year.
      parameters:
        - $ref: '#/parameters/district_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Event_Simple'
  /district/{district_key}/{year}/events/keys:
    get:
      tags:
      - district
      - event
      - list
      description: |
        Gets a list of event keys for events in the given district in the given year.
      parameters:
        - $ref: '#/parameters/district_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Event Key
  /district/{district_key}/{year}/teams:
    get:
      tags:
      - district
      - team
      - list
      description: |
        Gets a list of `Team` objects that competed in events in the
        given district in the given year.
      parameters:
        - $ref: '#/parameters/district_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
  /district/{district_key}/{year}/teams/simple:
    get:
      tags:
      - district
      - team
      - list
      description: |
        Gets a short-form list of `Team` objects that competed in events in the
        given district in the given year.
      parameters:
        - $ref: '#/parameters/district_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/Team_Simple'
  /district/{district_key}/{year}/teams/keys:
    get:
      tags:
      - district
      - team
      - list
      description: |
        Gets a list of `Team` objects that competed in events in the
        given district in the given year.
      parameters:
        - $ref: '#/parameters/district_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              type: string
              description: Team Key
  /district/{district_key}/{year}/rankings:
    get:
      tags:
      - district
      - team
      - list
      description: |
        Gets a list of team district rankings for the given district in the given year.
      parameters:
        - $ref: '#/parameters/district_key'
        - $ref: '#/parameters/year'
      security:
        - apiKeyHeader: []
        - apiKeyParameter: []
      responses:
        200:
          description: Successful response
          schema:
            type: array
            items:
              $ref: '#/definitions/District_Ranking'

securityDefinitions:
  # Swagger spec does not allow for a single definition that can be used as
  # either a header key/value pair or as a query parameter, hence we have
  # two identical definitions, save usage location.
  apiKeyHeader:
    type: apiKey
    in: header
    name: X-TBA-API-Key
    description: Your TBA API Key can be obtained from your Account Page on the TBA website.
  apiKeyParameter:
    type: apiKey
    in: query
    name: X-TBA-API-Key
    description: Your TBA API Key can be obtained from your Account Page on the TBA website.

tags:
  -
    name: team
    description: Calls that return team or team-specific information.
  -
    name: list
    description: Calls that return a list of records.
  -
    name: event
    description: Calls that return event, or event-specific information.
  -
    name: match
    description: Calls that return match, or match-specific information.
  -
    name: district
    description: Calls that return district, or district-related information.


definitions:
  API_Status:
    type: object
    required:
    - current_season
    - current_season_week
    - max_season
    - is_datafeed_down
    - down_events
    - ios
    - android
    properties:
      current_season:
        type: integer
        description: Year of the current FRC season.
      current_season_week:
        type: string
        description: Current week of the current FRC competition season, 99 for offseason.
      max_season:
        type: integer
        description: Maximum FRC season year for valid queries.
      is_datafeed_down:
        type: boolean
        description: True if the entire FMS API provided by FIRST is down.
      down_events:
        type: array
        description: |
          An array of strings containing event keys of any active events that are no longer updating.
        items:
          type: string
      ios:
        $ref: '#/definitions/API_Status_App_Version'
      android:
        $ref: '#/definitions/API_Status_App_Version'
  API_Status_App_Version:
    type: object
    required:
    - min_app_version
    - latest_app_version
    properties:
      min_app_version:
        type: integer
        description: |
          Internal use - Minimum application version required to correctly
          connect and process data.
      latest_app_version:
        type: integer
        description: |
          Internal use - Latest application version available.
  Team_Simple:
    type: object
    required:
    - key
    - name
    - team_number
    properties:
      key:
        type: string
        description: TBA team key with the format frcyyyy
      team_number:
        type: integer
        description: Official team number issued by FIRST
      nickname:
        type: string
        description: Team nickname provided by FIRST
      name:
        type: string
        description: Official long name registerd with FIRST
      city:
        type: string
        description: City of team derived from parsing the address registered with FIRST
      state:
        type: string
        description: State of team derived from parsing the address registered with FIRST
      country:
        type: string
        description: Country of team derived from parsing the address registered with FIRST
  Team:
    type: object
    allOf:
     - $ref: '#/definitions/Team_Simple'
    properties:
      website:
        type: string
        format: url
        description: Official website associatd with the team
      rookie_year:
        type: integer
        description: First year the team officially competed
      motto:
        type: string
        description: Team's motto as provided by FIRST
  Event_Simple:
    type: object
    required:
    - key
    - name
    - event_code
    - year
    properties:
      key:
        type: string
        description: |
          TBA event key with the format yyyy[EVENT_CODE], where yyyy is the year,
          and EVENT_CODE is the event code of the event.
      name:
        type: string
        description: |
          Official name of event on record either provided by FIRST or organizers of offseason event.
      event_code:
        type: string
        description: Event short code, as provided by FIRST.
      event_type:
        type: string
        enum:
        - Regional
        - District
        - District Championship
        - Championship Division
        - Championship Finals
        - Offseason
        - Preseason
        description: Event Type, eg Regional, District, or Offseason.
      event_district_key:
        type: string
        description: TBA Key for the District the Event is in, may be null.
      city:
        type: string
        description: City of event
      state:
        type: string
        description: State of event
      country:
        type: string
        description: Country of event
      start_date:
        type: string
        description: Event start date in `yyyy-mm-dd` format.
      end_date:
        type: string
        description: Event end date in `yyyy-mm-dd` format.
      timezone:
        type: string
        description: Timezone name
      year:
        type: integer
        description: Year the event data is for.
  Event:
    type: object
    allOf:
     - $ref: '#/definitions/Event_Simple'
    properties:
      short_name:
        type: string
        description: |
          Same as name but doesn't include event specifiers, such as 'Regional'
          or 'District'. May be null.
      event_district_name:
        type: string
        enum:
        - Michigan
        - Mid-Atlantic
        - New England
        - Pacific Northwest
        - Indiana
        - Chesapeake
        - North Carolina
        - Georgia
        - Ontairo
        - Isreal
        description: Event District
      week:
        type: integer
        description: Week of the compeition season this event is in.
      venue_address:
        type: string
        description: Address of the event's venue, if available. Line breaks included.
      website:
        type: string
        description: The event's website, if any.
      webcasts:
        type: array
        items:
          $ref: '#/definitions/Webcast'
        description: |
          If the event has webcast data associated with it, this contains JSON data of the streams.
  Team_Event_Status:
    type: object
    properties:
      rank:
        type: object
        properties:
          first_sort:
            type: integer
          breakdown:
            type: string
            description: String of year-specific ranking details.
          record:
            type: string
            description: |
              Record as a string in the format WINS-LOSSES-TIES over all matches
          played:
            type: integer
            description: Matches played
          rank:
            type: integer
            description: Relative rank position
          total:
            type: integer
            description: Number of teams at the event
      alliance:
        type: object
        properties:
          name:
            type: string
            description: Alliance name, may be null
          backup:
            type: object
            description: Backup status, may be null
            properties:
              out:
                type: string
                description: TBA key for the team replaced by the backup.
              in:
                type: string
                description: TBA key for the backup team called in.
          position:
            type: integer
            description: |
              Driver station position from 0-2, or -1 if the team has been
              replaced with a backup.
      playoff:
        type: object
        description: |
          Playoff status for this team, may be null if the team did not make
          playoffs, or playoffs have not begun.
        properties:
          level:
            type: string
            enum:
              - qm
              - ef
              - qf
              - sf
              - f
            description: The highest playoff level the team reached.
          record:
            type: string
            description: |
              Record in playoffs as a string in the format WINS-LOSSES-TIES
          status:
            type: string
            enum:
              - won
              - eliminated
              - playing
            description: Current competition status for the playoffs
  Event_Stats_2016:
    type: object
    properties:
      LowBar:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Low Bar - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      A_ChevalDeFrise:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Cheval De Frise - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      A_Portcullis:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Portcullis - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      B_Ramparts:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Ramparts - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      B_Moat:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Moat - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      C_SallyPort:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Sally Port - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      C_Drawbridge:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Drawbridge - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      D_RoughTerrain:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Rough Terrain - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      D_RockWall:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          For the Rock Wall - An array with three values, number of times
          damaged, number of opportunities to damage, and percentage.
      average_high_goals:
        type: number
        format: float
        description: Average number of high goals scored.
      average_low_goals:
        type: number
        format: float
        description: Average number of low goals scored.
      breaches:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          An array with three values, number of times
          breeched, number of opportunities to breech, and percentage.
      scales:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          An array with three values, number of times
          scaled, number of opportunities to scale, and percentage.
      challenges:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          An array with three values, number of times
          challenged, number of opportunities to challenge, and percentage.
      captures:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: number
          format: float
        description: |
          An array with three values, number of times
          captured, number of opportunities to capture, and percentage.
      average_win_score:
        type: number
        format: float
        description: Average winning score.
      average_win_margin:
        type: number
        format: float
        description: Average margin of victory.
      average_score:
        type: number
        format: float
        description: Average total score.
      average_auto_score:
        type: number
        format: float
        description: Average autonomous score.
      average_crossing_score:
        type: number
        format: float
        description: Average crossing score.
      average_boulder_score:
        type: number
        format: float
        description: Average boulder score.
      average_tower_score:
        type: number
        format: float
        description: Average tower score.
      average_foul_score:
        type: number
        format: float
        description: Average foul score.
      high_score:
        type: array
        minItems: 3
        maxItems: 3
        items:
          type: string
        description: |
          An array with three values, high score, match key from the match with
          the high score, and the name of the match
  Webcast:
    type: object
    required:
    - type
    - channel
    properties:
      type:
        type: string
        enum:
          - youtube
          - twitch
          - ustream
          - iframe
          - html5
          - rtmp
          - livestream
        description: Type of webcast, typically descriptive of the streaming provider
      channel:
        type: string
        description: |
          Type specific channel information. May be the YouTube stream, or Twitch channel
          name. In the case of iframe types, contains HTML to embed the stream in an HTML
          iframe.
      file:
        type: string
        description: File identification as may be required for some times. May be null.
  Match_Simple:
    type: object
    required:
    - key
    - event_key
    - comp_level
    - match_number
    - set_number
    properties:
      key:
        type: string
        description: |
          TBA event key with the format yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER],
          where yyyy is the year, and EVENT_CODE is the event code of the event,
          COMP_LEVEL is (qm, ef, qf, sf, f), and MATCH_NUMBER is the match number
          in the competition level. A set number may append the competition level
          if more than one match in required per set.
      comp_level:
        type: string
        enum:
          - qm
          - ef
          - qf
          - sf
          - f
        description: The competition level the match was played at.
      set_number:
        type: integer
        description: |
          The set number in a series of matches where more than one match is
          required in the match series.
      match_number:
        type: integer
        description: The match number of the match in the competition level.
      alliances:
        type: object
        required:
        - blue
        - red
        properties:
          blue:
            type: object
            required:
            - score
            - team_keys
            description: Blue Alliance
            properties:
              score:
                type: integer
              team_keys:
                type: array
                items:
                  type: string
                  description: Team keys
              surrogate_team_keys:
                type: array
                description: TBA team keys of any teams playing as a surrogate.
                items:
                  type: string
                  description: Team keys
          red:
            type: object
            required:
            - score
            - team_keys
            description: Red Alliance
            properties:
              score:
                type: integer
              team_keys:
                type: array
                items:
                  type: string
                  description: Team Keys
              surrogate_team_keys:
                type: array
                description: TBA team keys of any teams playing as a surrogate.
                items:
                  type: string
                  description: Team keys
        description: |
          A list of alliances, the teams on the alliances, and their score.
      winning_alliance:
        type: string
        description: |
          The name of the winning alliance, or `tie` if the match has been played. May be null.
      event_key:
        type: string
        description: Event key of the event the match was played at.
      time:
        type: integer
        format: int64
        description: |
          UNIX timestamp of match time, as taken from the published schedule
      actual_time:
        type: integer
        format: int64
        description: |
          UNIX timestamp of actual match start time
  Match:
    type: object
    allOf:
     - $ref: '#/definitions/Match_Simple'
    properties:
      score_breakdown:
        type: string
        format: json
        description: |
          Score breakdown for auto, teleop, etc. points. Varies from year to
          year. May be null.
      time_string:
        type: string
        description: |
          Time string for this match, as published on the official schedule.
          Of course, this may or may not be accurate, as events often run
          ahead or behind schedule
      videos:
        type: array
        items:
          $ref: '#/definitions/Media'
        description: |
          Array of Media associated with this match and corresponding
          information
  Match_Score_Breakdown_2016:
    type: object
    properties:
      blue:
        $ref: '#/definitions/Match_Score_Breakdown_2016_Team'
      red:
        $ref: '#/definitions/Match_Score_Breakdown_2016_Team'
  Match_Score_Breakdown_2016_Team:
    type: object
    description: See the 2016 FMS API documentation for a description of each value.
    properties:
      autoPoints:
        type: integer
      teleopPoints:
        type: integer
      breechPoints:
        type: integer
      foulPoints:
        type: integer
      capturePoints:
        type: integer
      adjustPoints:
        type: integer
      totalPoints:
        type: integer
      robot1Auto:
        type: string
        enum:
        - Crossed
        - Reached
        - None
      robot2Auto:
        type: string
        enum:
        - Crossed
        - Reached
        - None
      robot3Auto:
        type: string
        enum:
        - Crossed
        - Reached
        - None
      autoReachPoints:
        type: integer
      autoCrossingPoints:
        type: integer
      autoBouldersLow:
        type: integer
      autoBouldersHigh:
        type: integer
      autoBoulderPoints:
        type: integer
      teleopCrossingPoints:
        type: integer
      teleopBouldersLow:
        type: integer
      teleopBouldersHigh:
        type: integer
      teleopBoulderPoints:
        type: integer
      teleopDefensesBreached:
        type: boolean
      teleopChallengePoints:
        type: integer
      teleopScalePoints:
        type: integer
      teleopTowerCaptured:
        type: integer
      towerFaceA:
        type: string
      towerFaceB:
        type: string
      towerFaceC:
        type: string
      towerEndStrength:
        type: integer
      techFoulCount:
        type: integer
      foulCount:
        type: integer
      position2:
        type: string
      position3:
        type: string
      position4:
        type: string
      position5:
        type: string
      position1crossings:
        type: integer
      position2crossings:
        type: integer
      position3crossings:
        type: integer
      position4crossings:
        type: integer
      position5crossings:
        type: integer
  Media:
    type: object
    required:
    - type
    properties:
      key:
        type: string
        description: TBA identifier for this media
      type:
        type: string
        enum:
        - youtube
        - cdphotothread
        - imgur
        - facebook-profile
        - youtube-channel
        - twitter-profile
        - github-profile
        - instagram-profile
        - periscope-profile
        description: String type of the media element.
      foreign_key:
        type: string
        description: The key used to identify this media on the media site.
      details:
        type: string
        format: json
        description: If required, a JSON dict of additional media information.
      preferred:
        type: boolean
        description: True if the media is of high quality
  Elimination_Alliance:
    type: object
    required:
    - picks
    - captain
    properties:
      name:
        type: string
        description: Alliance name, may be null.
      backup:
        type: object
        description: Backup team called in, may be null.
        properties:
          out:
            type: string
            description: Team key that was replaced by the backup team.
          in:
            type: string
            description: Team key that was called in as the backup.
      declines:
        type: array
        description: List of teams that declined the alliance.
        items:
          type: string
          description: Team key that declined the alliance.
      picks:
        type: array
        description: List of team keys picked for the alliance.
        items:
          type: string
          description: Team key picked for the alliance.
      captain:
        type: string
        description: Team key of the alliance captain.
  Ranking:
    type: object
    required:
    - rank
    - team_key
    properties:
      rank:
        type: integer
        description: The team's rank at the event as provided by FIRST.
      team_key:
        type: string
        description: The team with this rank.
      record:
        type: object
        description: Win-Loss-Tie ranking information, if avalable. May be null.
        properties:
          qualifications:
            type: object
            description: W-L-T record in qualification matches
            properties:
              wins:
                type: integer
              losses:
                type: integer
              ties:
                type: integer
          overall:
            type: object
            description: W-L-T record across all matches at an event
            properties:
              wins:
                type: integer
              losses:
                type: integer
              ties:
                type: integer
      played:
        type: integer
        description: Number of matches played by this team.
      additional_properties:
        type: array
        description: Additional year-specific information, may be null.
        items:
          type: object
          properties:
            label:
              type: string
              description: The name of the additional property.
            value:
              type: string
              description: The value for the property. May be of any type.
  Event_District_Points:
    type: object
    required:
    - points
    properties:
      points:
        type: array
        description: Points gained for each team at the event.
        items:
          type: object
          properties:
            team_key:
              type: string
            alliance_points:
              type: integer
            award_points:
              type: integer
            qual_points:
              type: integer
            elim_points:
              type: integer
            total:
              type: integer
      tiebreakers:
        type: array
        description: Tiebreaker values for each team at the event.
        items:
          type: object
          properties:
            team_key:
              type: string
            highest_qual_scores:
              type: array
              items:
                type: integer
            qual_wins:
              type: integer
  Award:
    type: object
    required:
    - name
    - award_type
    - event_key
    - year
    properties:
      name:
        type: string
        description: |
          The name of the award as provided by FIRST. May vary for the same award type.
      award_type:
        type: string
        enum:
        - Chairman's
        - Winner
        - Finalist
        - Woodie Flowers
        - Dean's List
        - Volunteer
        - Founders
        - Bart Kamen Memorial
        - Make It Loud
        - Engineering Inspiration
        - Rookie All Star
        - Gracious Professionalism
        - Coopertition
        - Judge's
        - Highest Rookie Seed
        - Rookie Inspiration
        - Industrial Design
        - Quality
        - Safety
        - Sportsmanship
        - Creativity
        - Engineering Excellence
        - Entrepreneurship
        - Excellence In Design
        - Excellence in Design CAD
        - Excellence in Design Animation
        - Driving Tomorrows Technology
        - Imagery
        - Media and Technology
        - Innovation in Control
        - Spirit
        - Website
        - Visualization
        - Autodesk Inventor
        - Future Innovator
        - Recgonition of Extraordinary Service
        - Outstanding Cart
        - WSU Aim Higher
        - Leadership in Control
        - Number 1 Seed
        - Incredible Play
        - People's Choice Animation
        - Visualization Rising Star
        - Best Offensive Round
        - Best Play of the Day
        - Featherweight in the Finals
        - Most Photogenic
        - Outstanding Defense
        - Power to Simplify
        - Against All Odds
        - Rising Star
        - Chairman's Honorable Mention
        - Content and Communication Honorable Mention
        - Technical Execution Honorable Mention
        - Realization
        - Realization Honorable Mention
        - Design Your Future
        - Design Your Future Honorable Mention
        - Special Recognition Character Animation
        - High Score
        - Teacher Pioneer
        - Best Craftsmanship
        - Best Defensive Match
        - Play of the Day
        - Programming
        - Professionalism
        - Golden Corndog
        - Most Improved Team
        - Wildcard
        description: Type of award given.
      event_key:
        type: string
        description: The event_key of the event the award was won at.
      recipient_list:
        type: array
        items:
          $ref: '#/definitions/Award_Recipient'
        description: |
          A list of recipients of the award at the event. Either team_key
          and/or awardee for individual awards.
      year:
        type: integer
        description: The year this award was won.
  Award_Recipient:
    type: object
    properties:
      team_key:
        type: string
        description: The TBA team key for the team that was given the award. May be null.
      awardee:
        type: string
        description: The name of the individual given the award. May be null.
  District_Ranking:
    type: object
    required:
    - team_key
    - rank
    - point_total
    properties:
      team_key:
        type: string
      rank:
        type: integer
      rookie_bonus:
        type: integer
      point_total:
        type: integer
      event_points:
        type: array
        items:
          type: object
          properties:
            event_key:
              type: string
            district_cmp:
              type: boolean
            alliance_points:
              type: integer
            award_points:
              type: integer
            qual_points:
              type: integer
            elim_points:
              type: integer
            total:
              type: integer