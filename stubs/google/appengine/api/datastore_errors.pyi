from typing import Any

class Error(Exception): ...
class BadValueError(Error): ...
class BadPropertyError(Error): ...
class BadRequestError(Error): ...
class EntityNotFoundError(Error): ...
class BadArgumentError(Error): ...
class QueryNotFoundError(Error): ...
class TransactionNotFoundError(Error): ...
class Rollback(Error): ...
class TransactionFailedError(Error): ...

class BadFilterError(Error):
    filter: Any
    def __init__(self, filter) -> None: ...

class BadQueryError(Error): ...
class SnapshotVersionTooOldError(Error): ...
class BadKeyError(Error): ...
class InternalError(Error): ...

class NeedIndexError(Error):
    def __init__(self, error, original_message: Any | None = ..., header: Any | None = ..., yaml_index: Any | None = ..., xml_index: Any | None = ...) -> None: ...
    def OriginalMessage(self): ...
    def Header(self): ...
    def YamlIndex(self): ...
    def XmlIndex(self): ...

class ReferencePropertyResolveError(Error): ...
class Timeout(Error): ...
class CommittedButStillApplying(Timeout): ...
