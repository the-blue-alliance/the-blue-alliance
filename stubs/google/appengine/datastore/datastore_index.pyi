from google.appengine.api import appinfo as appinfo, datastore_types as datastore_types, validation as validation, yaml_errors as yaml_errors, yaml_object as yaml_object
from google.appengine.datastore import datastore_pb as datastore_pb
from typing import Any

class Property(validation.Validated):
    ATTRIBUTES: Any
    def IsAscending(self): ...
    def CheckInitialized(self) -> None: ...

def PropertyPresenter(dumper, prop): ...

class Index(validation.Validated):
    ATTRIBUTES: Any
    def CheckInitialized(self) -> None: ...

class IndexDefinitions(validation.Validated):
    ATTRIBUTES: Any

index_yaml: Any

def ParseIndexDefinitions(document, open_fn: Any | None = ...): ...
def ParseMultipleIndexDefinitions(document): ...
def IndexDefinitionsToKeys(indexes): ...
def IndexToKey(index): ...

class PropertySpec:
    def __init__(self, name, direction: Any | None = ..., mode: Any | None = ...) -> None: ...
    @property
    def name(self): ...
    @property
    def direction(self): ...
    @property
    def mode(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __lt__(self, other): ...
    def __le__(self, other): ...
    def __gt__(self, other): ...
    def __ge__(self, other): ...
    def __hash__(self): ...
    def Satisfies(self, other): ...
    def CopyToIndexPb(self, pb) -> None: ...

GEOSPATIAL: Any
ASCENDING: Any
DESCENDING: Any
EQUALITY_OPERATORS: Any
INEQUALITY_OPERATORS: Any
EXISTS_OPERATORS: Any

def Normalize(filters, orders, exists): ...
def RemoveNativelySupportedComponents(filters, orders, exists): ...
def CompositeIndexForQuery(query): ...
def CompositeIndexForGeoQuery(query): ...
def GetRecommendedIndexProperties(properties): ...
def MinimalCompositeIndexForQuery(query, index_defs): ...
def IndexYamlForQuery(kind, ancestor, props): ...
def IndexXmlForQuery(kind, ancestor, props): ...
def IndexDefinitionToProto(app_id, index_definition): ...
def IndexDefinitionsToProtos(app_id, index_definitions): ...
def ProtoToIndexDefinition(proto): ...
def ProtosToIndexDefinitions(protos): ...
