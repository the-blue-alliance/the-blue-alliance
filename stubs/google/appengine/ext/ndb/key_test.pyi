from google.appengine.api import datastore_errors as datastore_errors, datastore_types as datastore_types
from google.appengine.ext.ndb import key as key, model as model, tasklets as tasklets, test_utils as test_utils
from typing import Any, NamedTuple

class KeyTests(test_utils.NDBTest):
    the_module: Any
    def testShort(self) -> None: ...
    def testFlat(self) -> None: ...
    def testFlatLong(self) -> None: ...
    def testSerialized(self) -> None: ...
    def testId(self) -> None: ...
    def testIdentity(self) -> None: ...
    def testStringId(self) -> None: ...
    def testIntegerId(self) -> None: ...
    def testParent(self) -> None: ...
    def testRoot(self) -> None: ...
    def testRepr_Inferior(self) -> None: ...
    def testRepr_Toplevel(self) -> None: ...
    def testRepr_Incomplete(self) -> None: ...
    def testRepr_UnicodeKind(self) -> None: ...
    def testRepr_UnicodeId(self) -> None: ...
    def testRepr_App(self) -> None: ...
    def testRepr_Namespace(self) -> None: ...
    def testUnicode(self) -> None: ...
    def testHash(self) -> None: ...
    def testOrdering(self) -> None: ...
    def testUniqueIncomplete(self) -> None: ...
    def testIncomplete(self) -> None: ...
    def testKindFromModel(self): ...
    def testKindFromBadValue(self) -> None: ...
    pre_counter: int
    post_counter: int
    key: Any
    def testDeleteHooksCalled(self) -> None: ...
    def testNoDefaultDeleteCallback(self) -> None: ...
    entity: Any
    def testGetHooksCalled(self) -> None: ...
    pre_get_flag: bool
    post_get_flag: bool
    pre_delete_flag: bool
    post_delete_flag: bool
    def testMonkeyPatchHooks(self) -> None: ...
    def testPreHooksCannotCancelRPC(self) -> None: ...
    def testNoDefaultGetCallback(self) -> None: ...
    def testFromOldKey(self) -> None: ...

class Snapshot(NamedTuple):
    snapshot_key: Any
    created_on: Any

class KeyPickleTests(test_utils.NDBTest):
    keys: Any
    pkeys: Any
    def setUp(self) -> None: ...
    def testPickleBackwardsCompatibility(self) -> None: ...
    def testPickleForwardCompatibility(self) -> None: ...
    def testPy2PickleSetState(self) -> None: ...
    def testConsistentPickleBehaviour(self) -> None: ...
    def testPickling(self) -> None: ...
