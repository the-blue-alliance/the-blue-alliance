from typing import Any, Optional

class Schemas:
    schemas: Any = ...
    pretty: Any = ...
    def __init__(self, discovery: Any) -> None: ...
    def prettyPrintByName(self, name: Any): ...
    def prettyPrintSchema(self, schema: Any): ...
    def get(self, name: Any, default: Optional[Any] = ...): ...

class _SchemaToStruct:
    value: Any = ...
    string: Any = ...
    schema: Any = ...
    dent: Any = ...
    from_cache: Any = ...
    seen: Any = ...
    def __init__(self, schema: Any, seen: Any, dent: int = ...) -> None: ...
    def emit(self, text: Any) -> None: ...
    def emitBegin(self, text: Any) -> None: ...
    def emitEnd(self, text: Any, comment: Any) -> None: ...
    def indent(self) -> None: ...
    def undent(self) -> None: ...
    def to_str(self, from_cache: Any): ...
