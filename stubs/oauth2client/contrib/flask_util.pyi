from oauth2client import client as client, clientsecrets as clientsecrets, transport as transport
from oauth2client.contrib import dictionary_storage as dictionary_storage
from typing import Any, Optional

class UserOAuth2:
    app: Any = ...
    def __init__(self, app: Optional[Any] = ..., *args: Any, **kwargs: Any) -> None: ...
    authorize_callback: Any = ...
    flow_kwargs: Any = ...
    storage: Any = ...
    scopes: Any = ...
    def init_app(self, app: Any, scopes: Optional[Any] = ..., client_secrets_file: Optional[Any] = ..., client_id: Optional[Any] = ..., client_secret: Optional[Any] = ..., authorize_callback: Optional[Any] = ..., storage: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def authorize_view(self): ...
    def callback_view(self): ...
    @property
    def credentials(self): ...
    def has_credentials(self): ...
    @property
    def email(self): ...
    @property
    def user_id(self): ...
    def authorize_url(self, return_url: Any, **kwargs: Any): ...
    def required(self, decorated_function: Optional[Any] = ..., scopes: Optional[Any] = ..., **decorator_kwargs: Any): ...
    def http(self, *args: Any, **kwargs: Any): ...
