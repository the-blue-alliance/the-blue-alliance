from google.auth import transport
from typing import Any, Optional

end_of_field: Any

class KeepAuthSession(transport.requests.AuthorizedSession):
    def __init__(self, credential: Any) -> None: ...
    def rebuild_auth(self, prepared_request: Any, response: Any) -> None: ...

class _EventBuffer:
    def __init__(self) -> None: ...
    def append(self, char: Any) -> None: ...
    def truncate(self) -> None: ...
    @property
    def is_end_of_field(self): ...
    @property
    def buffer_string(self): ...

class SSEClient:
    url: Any = ...
    session: Any = ...
    retry: Any = ...
    requests_kwargs: Any = ...
    should_connect: bool = ...
    last_id: Any = ...
    buf: str = ...
    def __init__(self, url: Any, session: Any, retry: int = ..., **kwargs: Any) -> None: ...
    def close(self) -> None: ...
    def __iter__(self) -> Any: ...
    def __next__(self): ...
    def next(self): ...

class Event:
    sse_line_pattern: Any = ...
    data: Any = ...
    event_type: Any = ...
    event_id: Any = ...
    retry: Any = ...
    def __init__(self, data: str = ..., event_type: str = ..., event_id: Optional[Any] = ..., retry: Optional[Any] = ...) -> None: ...
    @classmethod
    def parse(cls, raw: Any): ...
