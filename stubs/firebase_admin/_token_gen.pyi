from firebase_admin import _auth_utils, exceptions as exceptions
from typing import Any, Optional

ID_TOKEN_ISSUER_PREFIX: str
ID_TOKEN_CERT_URI: str
COOKIE_ISSUER_PREFIX: str
COOKIE_CERT_URI: str
MIN_SESSION_COOKIE_DURATION_SECONDS: Any
MAX_SESSION_COOKIE_DURATION_SECONDS: Any
MAX_TOKEN_LIFETIME_SECONDS: Any
FIREBASE_AUDIENCE: str
RESERVED_CLAIMS: Any
METADATA_SERVICE_URL: str

class _SigningProvider:
    def __init__(self, signer: Any, signer_email: Any) -> None: ...
    @property
    def signer(self): ...
    @property
    def signer_email(self): ...
    @classmethod
    def from_credential(cls, google_cred: Any): ...
    @classmethod
    def from_iam(cls, request: Any, google_cred: Any, service_account: Any): ...

class TokenGenerator:
    ID_TOOLKIT_URL: str = ...
    app: Any = ...
    http_client: Any = ...
    request: Any = ...
    base_url: Any = ...
    def __init__(self, app: Any, http_client: Any) -> None: ...
    @property
    def signing_provider(self): ...
    def create_custom_token(self, uid: Any, developer_claims: Optional[Any] = ..., tenant_id: Optional[Any] = ...): ...
    def create_session_cookie(self, id_token: Any, expires_in: Any): ...

class TokenVerifier:
    request: Any = ...
    id_token_verifier: Any = ...
    cookie_verifier: Any = ...
    def __init__(self, app: Any) -> None: ...
    def verify_id_token(self, id_token: Any): ...
    def verify_session_cookie(self, cookie: Any): ...

class _JWTVerifier:
    project_id: Any = ...
    short_name: Any = ...
    operation: Any = ...
    url: Any = ...
    cert_url: Any = ...
    issuer: Any = ...
    articled_short_name: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def verify(self, token: Any, request: Any): ...

class TokenSignError(exceptions.UnknownError):
    def __init__(self, message: Any, cause: Any) -> None: ...

class CertificateFetchError(exceptions.UnknownError):
    def __init__(self, message: Any, cause: Any) -> None: ...

class ExpiredIdTokenError(_auth_utils.InvalidIdTokenError):
    def __init__(self, message: Any, cause: Any) -> None: ...

class RevokedIdTokenError(_auth_utils.InvalidIdTokenError):
    def __init__(self, message: Any) -> None: ...

class InvalidSessionCookieError(exceptions.InvalidArgumentError):
    def __init__(self, message: Any, cause: Optional[Any] = ...) -> None: ...

class ExpiredSessionCookieError(InvalidSessionCookieError):
    def __init__(self, message: Any, cause: Any) -> None: ...

class RevokedSessionCookieError(InvalidSessionCookieError):
    def __init__(self, message: Any) -> None: ...
