from firebase_admin import exceptions as exceptions
from typing import Any, Optional

def android_app(app_id: Any, app: Optional[Any] = ...): ...
def ios_app(app_id: Any, app: Optional[Any] = ...): ...
def list_android_apps(app: Optional[Any] = ...): ...
def list_ios_apps(app: Optional[Any] = ...): ...
def create_android_app(package_name: Any, display_name: Optional[Any] = ..., app: Optional[Any] = ...): ...
def create_ios_app(bundle_id: Any, display_name: Optional[Any] = ..., app: Optional[Any] = ...): ...

class AndroidApp:
    def __init__(self, app_id: Any, service: Any) -> None: ...
    @property
    def app_id(self): ...
    def get_metadata(self): ...
    def set_display_name(self, new_display_name: Any): ...
    def get_config(self): ...
    def get_sha_certificates(self): ...
    def add_sha_certificate(self, certificate_to_add: Any): ...
    def delete_sha_certificate(self, certificate_to_delete: Any): ...

class IOSApp:
    def __init__(self, app_id: Any, service: Any) -> None: ...
    @property
    def app_id(self): ...
    def get_metadata(self): ...
    def set_display_name(self, new_display_name: Any): ...
    def get_config(self): ...

class _AppMetadata:
    def __init__(self, name: Any, app_id: Any, display_name: Any, project_id: Any) -> None: ...
    @property
    def app_id(self): ...
    @property
    def display_name(self): ...
    @property
    def project_id(self): ...
    def __eq__(self, other: Any) -> Any: ...

class AndroidAppMetadata(_AppMetadata):
    def __init__(self, package_name: Any, name: Any, app_id: Any, display_name: Any, project_id: Any) -> None: ...
    @property
    def package_name(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __hash__(self) -> Any: ...

class IOSAppMetadata(_AppMetadata):
    def __init__(self, bundle_id: Any, name: Any, app_id: Any, display_name: Any, project_id: Any) -> None: ...
    @property
    def bundle_id(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __hash__(self) -> Any: ...

class SHACertificate:
    SHA_1: str = ...
    SHA_256: str = ...
    def __init__(self, sha_hash: Any, name: Optional[Any] = ...) -> None: ...
    @property
    def name(self): ...
    @property
    def sha_hash(self): ...
    @property
    def cert_type(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
    def __hash__(self) -> Any: ...

class _ProjectManagementService:
    BASE_URL: str = ...
    MAXIMUM_LIST_APPS_PAGE_SIZE: int = ...
    MAXIMUM_POLLING_ATTEMPTS: int = ...
    POLL_BASE_WAIT_TIME_SECONDS: float = ...
    POLL_EXPONENTIAL_BACKOFF_FACTOR: float = ...
    ANDROID_APPS_RESOURCE_NAME: str = ...
    ANDROID_APP_IDENTIFIER_NAME: str = ...
    IOS_APPS_RESOURCE_NAME: str = ...
    IOS_APP_IDENTIFIER_NAME: str = ...
    def __init__(self, app: Any) -> None: ...
    def get_android_app_metadata(self, app_id: Any): ...
    def get_ios_app_metadata(self, app_id: Any): ...
    def set_android_app_display_name(self, app_id: Any, new_display_name: Any) -> None: ...
    def set_ios_app_display_name(self, app_id: Any, new_display_name: Any) -> None: ...
    def list_android_apps(self): ...
    def list_ios_apps(self): ...
    def create_android_app(self, package_name: Any, display_name: Optional[Any] = ...): ...
    def create_ios_app(self, bundle_id: Any, display_name: Optional[Any] = ...): ...
    def get_android_app_config(self, app_id: Any): ...
    def get_ios_app_config(self, app_id: Any): ...
    def get_sha_certificates(self, app_id: Any): ...
    def add_sha_certificate(self, app_id: Any, certificate_to_add: Any) -> None: ...
    def delete_sha_certificate(self, certificate_to_delete: Any) -> None: ...
